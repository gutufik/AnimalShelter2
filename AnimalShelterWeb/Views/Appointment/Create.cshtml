@using Core
@model Core.AnimalAppointment


@{
    ViewData["Title"] = "Create";
}

<h2>Новое назанчение</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AnimalId" class="control-label">Животное</label>
                <select asp-for="AnimalId" class="form-control">
                    @foreach (var animal in DataAccess.GetAnimals())
                    {
                        <option value=@animal.Id>@animal.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label">Дата назначения</label>
                <input asp-for="Date" type=date class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeId" class="control-label">Тип</label>
                <select asp-for="AnimalId" class="form-control">
                    @foreach (var type in DataAccess.GetAppointmentTypes())
                    {
                        <option value=@type.Id>@type.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
